# This file contains common pin mappings for the BIGTREETECH SKR mini
# E3 v2.0. To use this config, the firmware should be compiled for the
# STM32F103 with a "28KiB bootloader" and USB communication. Also,
# select "Enable extra low-level configuration options" and configure
# "GPIO pins to set at micro-controller startup" to "!PA14".

# The "make flash" command does not work on the SKR mini E3. Instead,
# after running "make", copy the generated "out/klipper.bin" file to a
# file named "firmware.bin" on an SD card and then restart the SKR
# mini E3 with that SD card.

# See docs/Config_Reference.md for a description of parameters.
[include /home/klipper/printer_data/config/macros.cfg]
[include /home/klipper/printer_data/config/display.cfg]
[include /home/klipper/printer_data/config/menu.cfg]



[bed_screws]
screw1: 24, 38
screw2: 194, 38
screw3: 194, 204
screw4: 24, 204

[bed_mesh]
speed: 100
horizontal_move_z: 1
mesh_min: 30, 30
mesh_max: 200, 200 #this may need to be calibrated for your individual printer
probe_count: 3,3 #this is the number of probing points on X then Y axis
mesh_pps: 2,2
fade_start: 1
fade_end: 10
fade_target: 0

[firmware_retraction]
retract_length: 1
#   The length of filament (in mm) to retract when G10 is activated,
#   and to unretract when G11 is activated (but see
#   unretract_extra_length below). The default is 0 mm.
retract_speed: 45
#   The speed of retraction, in mm/s. The default is 20 mm/s.
#unretract_extra_length: 0
#   The length (in mm) of *additional* filament to add when
#   unretracting.
unretract_speed: 45
#   The speed of unretraction, in mm/s. The default is 10 mm/s.

### Drivers ###

## Y
[tmc2209 stepper_x]
uart_pin: PC11
tx_pin: PC10
uart_address: 0
run_current: 0.5
interpolate: false
stealthchop_threshold: 999999  # I'm not sure on this one. I tend to advise against using stealthchop (set to 0). Try both.
diag_pin: ^PC0      # Set to MCU pin connected to TMC DIAG pin
driver_SGTHRS: 55  # 255 is most sensitive value, 0 is least sensitive
driver_IHOLDDELAY: 8
driver_TPOWERDOWN: 20
driver_TBL: 2
driver_TOFF: 3
driver_HEND: 0
driver_HSTRT: 5
driver_PWM_AUTOGRAD: True
driver_PWM_AUTOSCALE: True
driver_PWM_LIM: 12
driver_PWM_REG: 8
driver_PWM_FREQ: 1
driver_PWM_GRAD: 14
driver_PWM_OFS: 36


## X
[tmc2209 stepper_y]
uart_pin: PC11
tx_pin: PC10
uart_address: 2
run_current: 0.5
interpolate: false
stealthchop_threshold: 999999  # I'm not sure on this one. I tend to advise against using stealthchop (set to 0). Try both.
diag_pin: ^PC1     # Set to MCU pin connected to TMC DIAG pin
driver_SGTHRS: 64  # 255 is most sensitive value, 0 is least sensitive
driver_IHOLDDELAY: 8
driver_TPOWERDOWN: 20
driver_TBL: 2
driver_TOFF: 3
driver_HEND: 0
driver_HSTRT: 5
driver_PWM_AUTOGRAD: True
driver_PWM_AUTOSCALE: True
driver_PWM_LIM: 12
driver_PWM_REG: 8
driver_PWM_FREQ: 1
driver_PWM_GRAD: 14
driver_PWM_OFS: 36

## Z
[tmc2209 stepper_z]
uart_pin: PC11
tx_pin: PC10
uart_address: 1
run_current: 0.6
interpolate: false
stealthchop_threshold: 999999  # I'm not sure on this one. I tend to advise against using stealthchop (set to 0). Try both.
driver_IHOLDDELAY: 8
driver_TPOWERDOWN: 20
driver_TBL: 2
driver_TOFF: 3
driver_HEND: 0
driver_HSTRT: 5
driver_PWM_AUTOGRAD: True
driver_PWM_AUTOSCALE: True
driver_PWM_LIM: 12
driver_PWM_REG: 8
driver_PWM_FREQ: 1
driver_PWM_GRAD: 14
driver_PWM_OFS: 36

## Extruder
[tmc2209 extruder]
uart_pin: PC11
tx_pin: PC10
uart_address: 3
run_current: 0.800
interpolate: false
stealthchop_threshold: 999999  # I'm not sure on this one. I tend to advise against using stealthchop (set to 0). Try both.
driver_IHOLDDELAY: 8
driver_TPOWERDOWN: 20
driver_TBL: 2
driver_TOFF: 3
driver_HEND: 0
driver_HSTRT: 5
driver_PWM_AUTOGRAD: True
driver_PWM_AUTOSCALE: True
driver_PWM_LIM: 12
driver_PWM_REG: 8
driver_PWM_FREQ: 1
driver_PWM_GRAD: 14
driver_PWM_OFS: 36

#### Eixo ####

## Y
[stepper_y]
step_pin: PB10
dir_pin: !PB2
enable_pin: !PB11
microsteps: 64
rotation_distance: 40
#endstop_pin: ^PC1
position_endstop: 0
position_max: 235
homing_speed: 20
endstop_pin: tmc2209_stepper_y:virtual_endstop
homing_retract_dist:0


## X
[stepper_x]
step_pin: PB13
dir_pin: !PB12
enable_pin: !PB14
microsteps: 64
rotation_distance: 40
#endstop_pin: ^PC0
position_endstop: 0
position_max: 232
homing_speed: 20
endstop_pin: tmc2209_stepper_x:virtual_endstop
homing_retract_dist:0

## Z
[stepper_z]
step_pin: PB0
dir_pin: PC5
enable_pin: !PB1
microsteps: 64
rotation_distance: 8
endstop_pin: ^PC2
#position_endstop: 0.0
position_max: 250
position_min: -2
homing_speed: 8

## Extruder
[extruder]
step_pin: PB3
dir_pin: !PB4
enable_pin: !PD2
microsteps: 32
rotation_distance: 33.500
nozzle_diameter: 0.400
filament_diameter: 1.750
heater_pin: PC8
sensor_type: EPCOS 100K B57560G104F
sensor_pin: PA0
#control: pid
#pid_Kp: 21.527
#pid_Ki: 1.063
#pid_Kd: 108.982
min_temp: 0
max_temp: 250
pressure_advance: 0.04375
pressure_advance_smooth_time: 0.04

### Mesa Aquecida ###
[heater_bed]
heater_pin: PC9
sensor_type: ATC Semitec 104GT-2
sensor_pin: PC3
control: pid
pid_Kp: 54.027
pid_Ki: 0.770
pid_Kd: 948.182
min_temp: 0
max_temp: 130
#pwm_cycle_time: 0.01666 (if 60hz power grid)

### Hotend ###
[heater_fan hotend_fan]
pin: PC7
max_power: 1.0
fan_speed: 1
kick_start_time: 0
heater: extruder
heater_temp: 50.0

### Sensores Temperatura ###
[temperature_sensor TVBox]
sensor_type: temperature_host
min_temp: 10
max_temp: 95

[temperature_sensor SKR]
sensor_type: temperature_mcu
min_temp: 0
max_temp: 95

#[heater_fan heatbreak_cooling_fan]

### Cooler ###
[fan]
##  Exhaust fan - In E2 OUT Positon
pin: PC6
max_power: 1.0

### Endstop ###

[endstop_phase stepper_z]
#endstop_accuracy:
#   Sets the expected accuracy (in mm) of the endstop. This represents
#   the maximum error distance the endstop may trigger (eg, if an
#   endstop may occasionally trigger 100um early or up to 100um late
#   then set this to 0.200 for 200um). The default is
#   4*rotation_distance/full_steps_per_rotation.
#trigger_phase: 35/64
#   This specifies the phase of the stepper motor driver to expect
#   when hitting the endstop. It is composed of two numbers separated
#   by a forward slash character - the phase and the total number of
#   phases (eg, "7/64"). Only set this value if one is sure the
#   stepper motor driver is reset every time the mcu is reset. If this
#   is not set, then the stepper phase will be detected on the first
#   home and that phase will be used on all subsequent homes.
#endstop_align_zero: False
#   If true then the position_endstop of the axis will effectively be
#   modified so that the zero position for the axis occurs at a full
#   step on the stepper motor. (If used on the Z axis and the print
#   layer height is a multiple of a full step distance then every
#   layer will occur on a full step.) The default is False.

### Impressora ###
[mcu]
serial: /dev/serial/by-id/usb-Klipper_stm32f103xe_33FFD8054E55363238691143-if00

[printer]
kinematics: cartesian
max_velocity: 250
max_accel: 4000
max_z_velocity: 5
max_z_accel: 100

[static_digital_output usb_pullup_enable]
pins: !PA14

[board_pins]
aliases:
    # EXP1 header
    EXP1_1=PB5,  EXP1_3=PA9,   EXP1_5=PA10, EXP1_7=PB8,  EXP1_9=<GND>,
    EXP1_2=PA15, EXP1_4=<RST>, EXP1_6=PB9,  EXP1_8=PB15, EXP1_10=<5V>

# See the sample-lcd.cfg file for definitions of common LCD displays.
[display]
lcd_type: st7920
cs_pin: EXP1_7
sclk_pin: EXP1_6
sid_pin: EXP1_8
encoder_pins: ^EXP1_5, ^EXP1_3
click_pin: ^!EXP1_2

[output_pin beeper]
pin: EXP1_1

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [stepper_z]
#*# position_endstop = 0.285
#*#
#*# [bed_mesh default]
#*# version = 1
#*# points =
#*# 	0.200000, 0.375000, 0.450000
#*# 	0.300000, 0.375000, 0.425000
#*# 	0.375000, 0.435000, 0.450000
#*# x_count = 3
#*# y_count = 3
#*# mesh_x_pps = 2
#*# mesh_y_pps = 2
#*# algo = lagrange
#*# tension = 0.2
#*# min_x = 30.0
#*# max_x = 200.0
#*# min_y = 30.0
#*# max_y = 200.0
#*#
#*# [extruder]
#*# control = pid
#*# pid_kp = 25.879
#*# pid_ki = 1.327
#*# pid_kd = 126.161
#*#
#*# [endstop_phase stepper_z]
#*# trigger_phase = 9/256
